{"version":3,"sources":["firebase.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/SignIn.js","App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","firestore","getFirestore","Card","props","classes","className","children","ExpensesFilter","onChange","e","onSaveFilterYear","target","value","filteredYear","ExpenseDate","month","day","year","ExpenseItem","title","type","onClick","onDeleteExpense3","id","amount","ExpensesList","items","length","map","expense","date","onDeleteExpense2","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","Expenses","useState","setFilteredYear","filteredExpenses","filter","toString","selectedYear","onDeleteExpense","ExpenseForm","enteredTile","setEnteredTile","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","submitHandler","a","preventDefault","Date","setDate","getDate","expenseData","getMonth","getFullYear","onSaveExpenseData","cancelButton","onSubmit","min","step","NewExpense","onSaveExpenseDataHandler","enteredExpenseData","onAddExpense","buttonExpense","setState","resetNewExpense","state","SignIn","signInWithRedirect","GoogleAuthProvider","App","user","setUser","setExpenses","useEffect","onAuthStateChanged","onSnapshot","collection","currentUser","uid","snapshot","expensesArray","docs","doc","data","console","log","addExpenseHandler","expenseRef","addDoc","expenseId","deleteDoc","prevExpenses","signOut","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4afc7bf3.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseApp = initializeApp({\r\n  apiKey: \"AIzaSyCfxURC8FADTqRn_S6ICL5th04vETZtWN8\",\r\n  authDomain: \"expense-tracker-react-6e5a7.firebaseapp.com\",\r\n  projectId: \"expense-tracker-react-6e5a7\",\r\n  storageBucket: \"expense-tracker-react-6e5a7.appspot.com\",\r\n  messagingSenderId: \"281020493167\",\r\n  appId: \"1:281020493167:web:62c4c71daab456d4564c9a\",\r\n});\r\n\r\nexport const auth = getAuth(firebaseApp);\r\nexport const firestore = getFirestore(firebaseApp);\r\n\r\nexport default firebaseApp;","import './Card.css'\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\n\r\nexport default Card;","import './ExpensesFilter.css';\r\n\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const changeYearHandler = (e) => {\r\n    props.onSaveFilterYear(e.target.value);\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={changeYearHandler} value={props.filteredYear}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n  // const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const month = months[props.month];\r\n  // const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const day = props.day;\r\n  // const year = props.date.getFullYear();\r\n  const year = props.year;\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  /*const expenseDate = new Date(2021, 2, 28);\r\n    const expenseTitle = 'Car Insurance';\r\n    const expenseAmount = 294.67;*/\r\n\r\n  /*function eraseItem() {\r\n    props.onErasedExpense(props.date.getTime());\r\n    console.log(typeof props.date.getTime());\r\n  }*/\r\n\r\n  const deleteHandler = () => {\r\n    props.onDeleteExpense3(props.id);\r\n  };\r\n\r\n  //console.log(\"ExpenseItem evaluated by React\"); // Esto demuestra que cada useState es independiente\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate month={props.month} year={props.year} day={props.day}/>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <button\r\n            type=\"button\"\r\n            className=\"expense-item__erase\"\r\n            onClick={deleteHandler}\r\n          >\r\n            Erase\r\n          </button>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","// import { useState } from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  // const [notErasedExpenses, setNotErasedExpenses] = useState(\"\");\r\n\r\n  // const erasedExpenseHandler = (erasedExpense) => {\r\n  //   setNotErasedExpenses(erasedExpense);\r\n  //   console.log(erasedExpense);\r\n  // };\r\n\r\n  // const newExpenseFiltered = props.items.filter((expense) => {\r\n  //   return expense.date.getTime() !== notErasedExpenses;\r\n  // });\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          // onErasedExpense={erasedExpenseHandler} continuacion de la prueba\r\n          key={expense.id}\r\n          id={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          month={expense.month}\r\n          year={expense.year}\r\n          day={expense.day}\r\n          date={expense.date}\r\n          onDeleteExpense3={props.onDeleteExpense2}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}} ></div>\r\n      </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Charts/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nox', value: 0},\r\n        {label: 'Dec', value: 0}\r\n    ];\r\n\r\n    for(const expense of props.expenses) {\r\n        // const expenseMonth = expense.date.getMonth();\r\n        const expenseMonth = expense.month;\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const saveFilterYearHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    // return expense.date.getFullYear().toString() === filteredYear;\r\n    return expense.year.toString() === filteredYear;\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   return onSnapshot(\r\n  //     collection(firestore, `users/${auth.currentUser.uid}/expense`),\r\n  //     (snapshot) => {\r\n  //       let expensesArray = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}))\r\n  //       console.log(expensesArray)\r\n  //     }\r\n  //   )\r\n  // })\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          onSaveFilterYear={saveFilterYearHandler}\r\n          filteredYear={filteredYear}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList \r\n          items = {filteredExpenses}\r\n          onDeleteExpense2 = {props.onDeleteExpense}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  //Forma individualizada\r\n  const [enteredTile, setEnteredTile] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  //   const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: \"\",\r\n  //     enteredAmount: \"\",\r\n  //     enteredDate: \"\",\r\n  //   }); Usamos 1 useState para todos\r\n\r\n  const titleChangeHandler = (e) => {\r\n    //Forma individualizada\r\n    setEnteredTile(e.target.value);\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredTitle: e.target.value,\r\n    // });\r\n    // Esto para hacer con un useState de esta forma para asegurarse que usamos la ultima actualizacion del estado\r\n    // setUserInput( (prevState) => {\r\n    //     return { ...prevState, enteredTitle: e.target.value};\r\n    // });\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredAmount: e.target.value,\r\n    // })\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredDate: e.target.value,\r\n    // })\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const date = new Date(enteredDate);\r\n    date.setDate(date.getDate() + 1)\r\n    \r\n    const expenseData = {\r\n      title: enteredTile,\r\n      amount: +enteredAmount,\r\n      date: date,\r\n      day: date.getDate(),\r\n      month: date.getMonth(),\r\n      year: date.getFullYear(),\r\n    };\r\n\r\n    // const expenseRef = collection(\r\n    //   firestore,\r\n    //   `users/${auth.currentUser.uid}/expense`\r\n    // );\r\n    // await addDoc(expenseRef, expenseData);\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTile(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n\r\n    props.cancelButton();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTile}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.cancelButton}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      // id: Math.random().toString(), //suficientemente bueno para esta demo, puede replicar\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const buttonExpense = <button onClick={addNewExpense}>Add New Expense</button>;\r\n\r\n  const [state, setState] = useState(buttonExpense);\r\n\r\n  const resetNewExpense = () => {setState(buttonExpense)}\r\n\r\n  function addNewExpense() {\r\n    setState(<ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler} cancelButton={resetNewExpense}/>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {/* Tarea 4 Seccion 5, yo trabaje con estados en los que lo que se va a renderizar lo manejaba dentro del mismo, el trabajo con true false y condicional dentro del return */}\r\n      {state}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { auth } from \"../../firebase\";\r\nimport { GoogleAuthProvider, signInWithRedirect } from \"firebase/auth\";\r\n\r\nconst SignIn = () => {\r\n  const signInWithGoogle = () =>\r\n    // signInWithPopup(auth, new GoogleAuthProvider());\r\n    signInWithRedirect(auth, new GoogleAuthProvider());\r\n\r\n  return (\r\n    <main>\r\n      <button onClick={signInWithGoogle}>Sign In With Google</button>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","//import ExpenseItem from \"./components/ExpenseItem\";\n// import React from 'react'; Old form of using JSX\n\n// fix the first of the month\nimport { auth, firestore } from \"./firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nimport { useState, useEffect, Fragment } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport SignIn from \"./components/UI/SignIn\";\nimport {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  onSnapshot,\n} from \"firebase/firestore\";\n\n// const DUMMY_EXPENSES = [\n//   {\n//     id: \"e1\",\n//     title: \"Toilet Paper\",\n//     amount: 94.12,\n//     date: new Date(2020, 7, 14),\n//   },\n//   { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n//   {\n//     id: \"e3\",\n//     title: \"Car Insurance\",\n//     amount: 294.67,\n//     date: new Date(2021, 2, 28),\n//   },\n//   {\n//     id: \"e4\",\n//     title: \"New Desk (Wooden)\",\n//     amount: 450,\n//     date: new Date(2021, 5, 12),\n//   },\n// ];\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [expenses, setExpenses] = useState(null);\n\n  const signOut = () => auth.signOut();\n\n  useEffect(() => {\n    onAuthStateChanged(auth, setUser);\n\n    if (user !== null) {\n      onSnapshot(\n        collection(firestore, `users/${auth.currentUser.uid}/expense`),\n        (snapshot) => {\n          let expensesArray = snapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n          }));\n          console.log(expensesArray);\n          setExpenses(expensesArray);\n        }\n      );\n    }\n  }, [user]);\n\n  const addExpenseHandler = async (expense) => {\n    // console.log('In App.js');\n    // // console.log(expense);\n    // setExpenses((prevExpenses) => {\n    //   return [expense, ...prevExpenses];\n    // });\n    const expenseRef = collection(\n      firestore,\n      `users/${auth.currentUser.uid}/expense`\n    );\n    await addDoc(expenseRef, expense);\n  };\n\n  const deleteExpenseHandler = (expenseId) => {\n    deleteDoc(\n      doc(firestore, `users/${auth.currentUser.uid}/expense/${expenseId}`)\n    );\n\n    setExpenses((prevExpenses) => {\n      const updatedExpenses = prevExpenses.filter(\n        (expense) => expense.id !== expenseId\n      );\n      return updatedExpenses;\n    });\n  };\n  // return React.createElement('div', {}, React.createElement('h2', {}, 'Lets get Started!'), React.createElement(Expenses, {items: expenses})\n  // ); Old form of using JSX\n\n  return user && expenses !== null ? (\n    <Fragment>\n      <div>\n        <NewExpense onAddExpense={addExpenseHandler} />\n\n        <Expenses items={expenses} onDeleteExpense={deleteExpenseHandler} />\n      </div>\n      <footer>\n        <button onClick={signOut}>Sign Out</button>\n      </footer>\n    </Fragment>\n  ) : (\n    <SignIn />\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}